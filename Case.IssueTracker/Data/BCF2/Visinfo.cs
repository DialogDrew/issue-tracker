//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 

namespace Case.IssueTracker.Data.BCF2
{

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  [XmlType(AnonymousType = true)]
  [XmlRoot(Namespace = "", IsNullable = false)]
  public partial class VisualizationInfo
  {

    private List<Component> componentsField;

    private OrthogonalCamera orthogonalCameraField;

    private PerspectiveCamera perspectiveCameraField;

    private SheetCamera sheetCameraField; //custom BCFier field

    private Line[] linesField;

    private ClippingPlane[] clippingPlanesField;

    private VisualizationInfoBitmaps[] bitmapsField;

    /// <remarks/>
    [XmlArrayItem(IsNullable = false)]
    public List<Component> Components
    {
      get { return this.componentsField; }
      set { this.componentsField = value; }
    }

    /// <remarks/>
    public OrthogonalCamera OrthogonalCamera
    {
      get { return this.orthogonalCameraField; }
      set { this.orthogonalCameraField = value; }
    }

    /// <remarks/>
    public PerspectiveCamera PerspectiveCamera
    {
      get { return this.perspectiveCameraField; }
      set { this.perspectiveCameraField = value; }
    }

    public SheetCamera SheetCamera
    {
      get { return this.sheetCameraField; }
      set { this.sheetCameraField = value; }
    }

    /// <remarks/>
    [XmlArrayItem(IsNullable = false)]
    public Line[] Lines
    {
      get { return this.linesField; }
      set { this.linesField = value; }
    }

    /// <remarks/>
    [XmlArrayItem(IsNullable = false)]
    public ClippingPlane[] ClippingPlanes
    {
      get { return this.clippingPlanesField; }
      set { this.clippingPlanesField = value; }
    }

    /// <remarks/>
    [XmlElement("Bitmaps")]
    public VisualizationInfoBitmaps[] Bitmaps
    {
      get { return this.bitmapsField; }
      set { this.bitmapsField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class Component
  {

    private string originatingSystemField;

    private string authoringToolIdField;

    private string ifcGuidField;

    private bool selectedField;

    private bool selectedFieldSpecified;

    private bool visibleField;

    private byte[] colorField;

    public Component()
    {
      this.visibleField = true;
    }

    /// <remarks/>
    public string OriginatingSystem
    {
      get { return this.originatingSystemField; }
      set { this.originatingSystemField = value; }
    }

    /// <remarks/>
    public string AuthoringToolId
    {
      get { return this.authoringToolIdField; }
      set { this.authoringToolIdField = value; }
    }

    /// <remarks/>
    [XmlAttribute(DataType = "normalizedString")]
    public string IfcGuid
    {
      get { return this.ifcGuidField; }
      set { this.ifcGuidField = value; }
    }

    /// <remarks/>
    [XmlAttribute()]
    public bool Selected
    {
      get { return this.selectedField; }
      set { this.selectedField = value; }
    }

    /// <remarks/>
    [XmlIgnore()]
    public bool SelectedSpecified
    {
      get { return this.selectedFieldSpecified; }
      set { this.selectedFieldSpecified = value; }
    }

    /// <remarks/>
    [XmlAttribute()]
    [System.ComponentModel.DefaultValueAttribute(true)]
    public bool Visible
    {
      get { return this.visibleField; }
      set { this.visibleField = value; }
    }

    /// <remarks/>
    [XmlAttribute(DataType = "hexBinary")]
    public byte[] Color
    {
      get { return this.colorField; }
      set { this.colorField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class ClippingPlane
  {

    private Point locationField;

    private Direction directionField;

    /// <remarks/>
    public Point Location
    {
      get { return this.locationField; }
      set { this.locationField = value; }
    }

    /// <remarks/>
    public Direction Direction
    {
      get { return this.directionField; }
      set { this.directionField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class Point
  {

    private double xField;

    private double yField;

    private double zField;

    /// <remarks/>
    public double X
    {
      get { return this.xField; }
      set { this.xField = value; }
    }

    /// <remarks/>
    public double Y
    {
      get { return this.yField; }
      set { this.yField = value; }
    }

    /// <remarks/>
    public double Z
    {
      get { return this.zField; }
      set { this.zField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class Direction
  {

    private double xField;

    private double yField;

    private double zField;

    /// <remarks/>
    public double X
    {
      get { return this.xField; }
      set { this.xField = value; }
    }

    /// <remarks/>
    public double Y
    {
      get { return this.yField; }
      set { this.yField = value; }
    }

    /// <remarks/>
    public double Z
    {
      get { return this.zField; }
      set { this.zField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class Line
  {

    private Point startPointField;

    private Point endPointField;

    /// <remarks/>
    public Point StartPoint
    {
      get { return this.startPointField; }
      set { this.startPointField = value; }
    }

    /// <remarks/>
    public Point EndPoint
    {
      get { return this.endPointField; }
      set { this.endPointField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class PerspectiveCamera
  {

    private Point cameraViewPointField;

    private Direction cameraDirectionField;

    private Direction cameraUpVectorField;

    private double fieldOfViewField;

    public PerspectiveCamera()
    {
      CameraDirection = new Direction();
      CameraUpVector = new Direction();
      CameraViewPoint = new Point();
    }

    /// <remarks/>
    public Point CameraViewPoint
    {
      get { return this.cameraViewPointField; }
      set { this.cameraViewPointField = value; }
    }

    /// <remarks/>
    public Direction CameraDirection
    {
      get { return this.cameraDirectionField; }
      set { this.cameraDirectionField = value; }
    }

    /// <remarks/>
    public Direction CameraUpVector
    {
      get { return this.cameraUpVectorField; }
      set { this.cameraUpVectorField = value; }
    }

    /// <remarks/>
    public double FieldOfView
    {
      get { return this.fieldOfViewField; }
      set { this.fieldOfViewField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  public partial class OrthogonalCamera
  {

    private Point cameraViewPointField;

    private Direction cameraDirectionField;

    private Direction cameraUpVectorField;

    private double viewToWorldScaleField;

    public OrthogonalCamera()
    {
      CameraDirection = new Direction();
      CameraUpVector = new Direction();
      CameraViewPoint = new Point();
    }

    /// <remarks/>
    public Point CameraViewPoint
    {
      get { return this.cameraViewPointField; }
      set { this.cameraViewPointField = value; }
    }

    /// <remarks/>
    public Direction CameraDirection
    {
      get { return this.cameraDirectionField; }
      set { this.cameraDirectionField = value; }
    }

    /// <remarks/>
    public Direction CameraUpVector
    {
      get { return this.cameraUpVectorField; }
      set { this.cameraUpVectorField = value; }
    }

    /// <remarks/>
    public double ViewToWorldScale
    {
      get { return this.viewToWorldScaleField; }
      set { this.viewToWorldScaleField = value; }
    }
  }
  


 /// <summary>
 /// Custom BCFier field to support 2D views in Revit
 /// EXPERIMENTAL
 /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SheetCamera
    {

        private Point topLeft;

        private Point bottomRight;

        private int sheetID;

        private string sheetName;

        public SheetCamera()
        {
            TopLeft = new Point();
            BottomRight = new Point();
        }

        /// <remarks/>
        public Point TopLeft
        {
            get
            {
                return this.topLeft;
            }
            set
            {
                this.topLeft = value;
            }
        }

        /// <remarks/>
        public Point BottomRight
        {
            get
            {
                return this.bottomRight;
            }
            set
            {
                this.bottomRight = value;
            }
        }

        /// <remarks/>
        public int SheetID
        {
            get
            {
                return this.sheetID;
            }
            set
            {
                this.sheetID = value;
            }
        }

        /// <remarks/>
        public string SheetName
        {
            get
            {
                return this.sheetName;
            }
            set
            {
                this.sheetName = value;
            }
        }
    }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.ComponentModel.DesignerCategoryAttribute("code")]
  [XmlType(AnonymousType = true)]
  public partial class VisualizationInfoBitmaps
  {

    private BitmapFormat bitmapField;

    private string referenceField;

    private Point locationField;

    private Direction normalField;

    private Direction upField;

    private double heightField;

    /// <remarks/>
    public BitmapFormat Bitmap
    {
      get { return this.bitmapField; }
      set { this.bitmapField = value; }
    }

    /// <remarks/>
    public string Reference
    {
      get { return this.referenceField; }
      set { this.referenceField = value; }
    }

    /// <remarks/>
    public Point Location
    {
      get { return this.locationField; }
      set { this.locationField = value; }
    }

    /// <remarks/>
    public Direction Normal
    {
      get { return this.normalField; }
      set { this.normalField = value; }
    }

    /// <remarks/>
    public Direction Up
    {
      get { return this.upField; }
      set { this.upField = value; }
    }

    /// <remarks/>
    public double Height
    {
      get { return this.heightField; }
      set { this.heightField = value; }
    }
  }

  /// <remarks/>
  [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
  [System.SerializableAttribute()]
  public enum BitmapFormat
  {

    /// <remarks/>
    PNG,

    /// <remarks/>
    JPG,
  }
}
